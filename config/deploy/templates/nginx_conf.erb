upstream unicorn_<%= application %> {
  server unix:/tmp/unicorn.<%= application %>.sock fail_timeout=0;
}

<% if nginx_use_ssl %>
server {
  server_name <%= nginx_server_name %> <%= nginx_other_server_names %>;
  listen 80 <%= fetch(:nginx_default_server) ? "default_server" : "" %>;
  <% if fetch(:nginx_forwarded_https_port) == 443 %>
    rewrite ^(.*) https://$host$1 permanent;
  <% else %>
    rewrite ^(.*) https://$host:<%= fetch(:nginx_forwarded_https_port) %>$1 permanent;
  <% end %>
}
<% end %>

server {
<% if nginx_use_ssl %>
  listen 443 <%= fetch(:nginx_default_server) ? "default_server" : "" %>;
  ssl on;
  ssl_certificate /etc/ssl/certs/<%= nginx_ssl_certificate %>;
  ssl_certificate_key /etc/ssl/private/<%= nginx_ssl_certificate_key %>;
<% else %>
  listen 80 <%= fetch(:nginx_default_server) ? "default_server" : "" %>;
<% end %>

  <% if fetch(:nginx_http_authentication_user) && fetch(:nginx_http_authentication_password) %>
  auth_basic "Staging-Bereich";
  auth_basic_user_file /etc/nginx/htpasswd_<%= fetch(:application) %>;
  <% end %>

  client_max_body_size 4G;
  keepalive_timeout 10;

  error_page 500 502 504 /500.html;
  error_page 503 @503;

  server_name <%= nginx_server_name %> <%= nginx_other_server_names %>;
  root <%= current_path %>/public;
  try_files $uri/index.html $uri <%

  if !fetch(:rails_cache).nil?
    %> @rails_cache_<%= application %>;

  location @rails_cache_<%= application %> {
    root <%= current_path %>/<%= fetch(:rails_cache) %>;
    try_files $uri $uri/_index.html $uri.html @unicorn_<%= application %>;
  }

  <% else %> @unicorn_<%= application %>; <% end %>

  location @unicorn_<%= application %> {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
<% if nginx_use_ssl %>
    proxy_set_header X-Forwarded-Proto https;
<% end %>
    proxy_pass http://unicorn_<%= application %>;
    # limit_req zone=one;
    access_log <%= shared_path %>/log/nginx/nginx.access.log;
    error_log <%= shared_path %>/log/nginx/nginx.error.log;
  }

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  location = /50x.html {
    root html;
  }

  location = /404.html {
    root html;
  }

  location @503 {
    error_page 405 = /system/maintenance.html;
    if (-f $document_root/system/maintenance.html) {
      rewrite ^(.*)$ /system/maintenance.html break;
    }
    rewrite ^(.*)$ /503.html break;
  }
  
  if ($uri ~* ^/apple-touch-icon.*\.png$) {
    return 404;
  }

  if ($request_method !~ ^(GET|HEAD|PUT|POST|DELETE|OPTIONS)$ ){
    return 405;
  }

  if (-f $document_root/system/maintenance.html) {
    return 503;
  }

  location ~ \.php$ {
    return 405;
  }
}
