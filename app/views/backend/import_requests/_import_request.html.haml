.section
  .container
    .row
      - if resource.admin_user.present?
        .col-md-6
          .panel.panel-default
            .panel-heading Antragsteller
            .panel-body
              %dl
                %dt Name
                %dd= resource.admin_user
              
                %dt E-Mail-Adresse
                %dd= resource.admin_user.email_address

                %dt E-Mail-Link
                %dd= mail_to(resource.admin_user.email_address_format, nil, subject: "Import-Anfrage vom #{resource.created_at_date}")


      .col-md-6
        .panel.panel-default
          .panel-heading Bearbeitung
          .panel-body
            - if resource.edited_at.present?
              %dl
                %dt Name
                %dd= resource.edit_user

                %dt Bearbeitung seit
                %dd= resource.edited_at
              = button_to 'Bearbeitung abgeben', { action: :update }, method: :patch, params: { 'import_request[edit_user_id]' => '' }, class: 'btn btn-default'

              - if resource.finished_at.present?
                %dl
                  %dt Abgearbeited seit
                  %dd= resource.finished_at
              - else
                = button_to 'Bearbeitung abschließen', { action: :update }, method: :patch, params: { 'import_request[finished]' => '1' }, class: 'btn btn-default'
            - else
              = button_to 'Bearbeitung übernehmen', { action: :update }, method: :patch, params: { 'import_request[edit_user_id]' => current_admin_user.id }, class: 'btn btn-default'
      
      - if resource.import_data.present? && resource.edited_at.present? && can?(:create, Import::Scores)
        .col-md-6
          .panel.panel-default
            .panel-heading Direkt-Import
            .panel-body
              - resource.import_data[:results].each do |result|
                - if result[:rows].count > 1 && result[:discipline] != 'zk'
                  %button.add-discipline{ class: "discipline-#{result[:discipline]}-#{result[:gender]}", data: { rows: result[:rows] }}
                    = result[:discipline]
                    = result[:gender]
                    = result[:rows].count
                    = result[:name]

  - if resource.edited_at.present? && resource.edit_user == current_admin_user && can?(:create, Import::Scores)
    = render('backend/imports/import_containers', competition_info: resource.competition_info)
  .container
    .row
      .col-md-12
        .panel.panel-default
          .panel-heading Wettkampf
          .panel-body
            %table.table.table-condensed
              - resource.import_request_files.each do |file|
                %tr
                  %td= file.file_with_link
                  %td{ data: { id: file.id, name: file.name }, class: file.pdf? && !file.transfered? ? "transfer-file" : nil }
                    - if file.transfered?
                      .fa.fa-exchange-alt
            %dl
              - %i[url_with_link date place event].each do |field|
                - if resource.send(field).present?
                  %dt= resource_class.human_attribute_name(field)
                  %dd= resource.send(field)

              %dt= resource_class.human_attribute_name(:description)
              %dd= simple_format resource.description


      .col-md-12
        .panel.panel-default
          .panel-heading Wettkämpfe mit ähnlichem Datum
          = count_table(@nearby_competitions) do |t|
            - t.col('Datum', class: 'col-10 info-link') { |row| competition_link(row, type: :date_iso) }
            - t.col('Ort', class: 'col-10 small') { |row| place_link(row.place) }
            - t.col('Typ', class: 'col-10 small') { |row| event_link(row.event) }
            - t.col('Name', class: 'col-20 info-link') { |row| competition_link(row, type: :name) }
            - t.col('HBw', th_options: { class: 'small' }, class: 'col-5') { |row| count_or_zero(row.hb_female) }
            - t.col('HBm', th_options: { class: 'small' }, class: 'col-5') { |row| count_or_zero(row.hb_male) }
            - t.col('HLw', th_options: { class: 'small' }, class: 'col-5') { |row| count_or_zero(row.hl_female) }
            - t.col('HLm', th_options: { class: 'small' }, class: 'col-5') { |row| count_or_zero(row.hl_male) }
            - t.col('GS', th_options: { class: 'small' }, class: 'col-5') { |row| count_or_zero(row.gs) }
            - t.col('FSw', th_options: { class: 'small' }, class: 'col-5') { |row| count_or_zero(row.fs_female) }
            - t.col('FSm', th_options: { class: 'small' }, class: 'col-5') { |row| count_or_zero(row.fs_male) }
            - t.col('LAw', th_options: { class: 'small' }, class: 'col-5') { |row| count_or_zero(row.la_female) }
            - t.col('LAm', th_options: { class: 'small' }, class: 'col-5') { |row| count_or_zero(row.la_male) }