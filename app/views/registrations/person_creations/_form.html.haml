= simple_form_for(form_resource, url: registrations_competition_person_creation_path(parent_resource)) do |f|
  .form-group.string
    %label.string.control-label{ for: 'person_suggestion' } Schnelleingabe
    %input.string.form-control{ name: 'person_suggestion', id: 'person_suggestion', type: 'text',
      data: { team_name: resource.try(:team).try(:name) }, autocomplete: 'off' }
  .suggestions-entries
    %table.table.table-hover.table-condensed
  .row
    .col-md-4
      = f.input :first_name
    .col-md-4
      = f.input :last_name
    .col-md-4
      = f.input :gender, collection: Genderable::GENDERS.keys.map { |gender| [g(gender), gender] }
  - if resource.team.blank?
    = f.input :team_name
  - else
    .row
      .col-md-4
        = resource.team
  = f.input :team_id, as: :hidden
  = f.input :person_id, as: :hidden
  - if resource.competition.person_tag_list.present?
    %fieldset
      %legend Zus√§tzliche Angaben
      - resource.competition.person_tag_list.each do |tag|
        = f.simple_fields_for :tags, (f.object.tags.find { |t| t.name == tag } || f.object.tags.new(name: tag)) do |g|
          = g.input :name, as: :hidden
          = g.input :_destroy, as: :boolean, label: tag, input_html: { checked: g.object.persisted? },
            checked_value: '0', unchecked_value: '1'
          = g.input :id, as: :hidden
  .pull-right
    = f.submit class: 'btn btn-primary'
